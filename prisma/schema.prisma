generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

        



model Boleto {
  id_boleto    Int       @id @default(autoincrement())
  id_usuario   Int?
  id_horario   Int?
  precio       Decimal   @db.Decimal(10, 2)
  fecha_compra DateTime
  id_orden_pago Int?
  orden_pago    OrdenPago? @relation(fields: [id_orden_pago], references: [id])

  Usuario      Usuario?  @relation(fields: [id_usuario], references: [id_usuario])
  Horario      Horario?  @relation(fields: [id_horario], references: [id_horario])
  Transacciones Transaccion[]
}

model Horario {
  id_horario     Int       @id @default(autoincrement())
  id_ruta        Int?
  hora_salida    DateTime
  hora_llegada   DateTime
  estado_horario String    @default("en curso") @db.VarChar(20)

  Boleto         Boleto[]
  Reportes       Reporte[]
  Ruta           Ruta?     @relation(fields: [id_ruta], references: [id_ruta])
}

model Reporte {
  id_reporte    Int       @id @default(autoincrement())
  id_usuario    Int?
  id_horario    Int?
  descripcion   String    @db.VarChar(255)
  fecha_reporte DateTime

  Usuario       Usuario?  @relation(fields: [id_usuario], references: [id_usuario])
  Horario       Horario?  @relation(fields: [id_horario], references: [id_horario])
}

model Ruta {
  id_ruta      Int       @id @default(autoincrement())
  origen       String    @db.VarChar(100)
  destino      String    @db.VarChar(100)
  distancia_km Decimal   @db.Decimal(5, 2)

  Horarios     Horario[]
}

model Transaccion {
  id_transaccion     Int       @id @default(autoincrement())
  id_boleto          Int?
  monto              Decimal     @db.Decimal(10, 2)
  estado_transaccion String    @default("exitosa") @db.VarChar(20)
  fecha_transaccion  DateTime

  Boleto             Boleto?   @relation(fields: [id_boleto], references: [id_boleto])
}

enum UserRole {
  turista
  administrador
}


model Usuario {
  id_usuario   Int       @id @default(autoincrement())
  nombre       String    @db.VarChar(50)
  apellido     String    @db.VarChar(50)
  email        String    @unique @db.VarChar(100)
  password   String    @db.VarChar(255)
  telefono     String?   @db.VarChar(20)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  role UserRole @default(turista)
 
  Boletos      Boleto[]
  Reportes     Reporte[]
  ordenes_pago OrdenPago[]
}

model Anuncio {
  id_anuncio  Int       @id @default(autoincrement())
  titulo      String    @db.VarChar(100)
  descripcion String    @db.VarChar(255)
  importancia String    @default("baja") @db.VarChar(20)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model OrdenPago {
  id              Int       @id @default(autoincrement())
  id_usuario      Int
  monto_total     Decimal   @db.Decimal(10, 2)
  estado          String    @default("pendiente") @db.VarChar(20)
  fecha_creacion  DateTime  @default(now())
  fecha_actualizacion DateTime @updatedAt
  id_pago_mp      String?   @unique // ID de pago de Mercado Pago
  url_pago        String?   // URL de pago de Mercado Pago
  
  usuario         Usuario   @relation(fields: [id_usuario], references: [id_usuario])
  boletos         Boleto[]
}

